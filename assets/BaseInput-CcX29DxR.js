import{o as t,c as a,n as i,t as n,k as d,a as u}from"./index-DfMSt3BK.js";const c={class:"inp"},m=["for"],y=["type","name","id","placeholder","value","disabled"],f={key:1,class:"inp__error-mes"},p={__name:"BaseInput",props:{value:{type:String,default:""},name:{type:String,required:!0},type:{type:String,default:"text"},placeholder:{type:String,required:!0},label:{type:String,default:""},modify:{type:String,default:""},isDisabled:{type:Boolean,default:!1},error:{type:Array}},emits:["update:value"],setup(e,{emit:r}){const s=r,o=l=>{s("update:value",l.target.value)};return(l,b)=>(t(),a("div",c,[e.label!==""?(t(),a("label",{key:0,class:i(["inp__label",e.modify?`inp__label_${e.modify}`:""]),for:e.name},n(e.label),11,m)):d("",!0),u("input",{class:i(["inp__text",e.modify?`inp__text_${e.modify}`:"",e.isDisabled===!0?"inp__text_disable":"inp__text_active"]),type:e.type,name:e.name,id:e.name,placeholder:e.placeholder,value:e.value,onInput:o,disabled:e.isDisabled,autocomplete:"off"},null,42,y),e.error?(t(),a("p",f,n(e.error),1)):d("",!0)]))}};export{p as _};
